<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_e_s_p_mega_io_t_8cpp" kind="file" language="C++">
    <compoundname>ESPMegaIoT.cpp</compoundname>
    <includes refid="_e_s_p_mega_io_t_8hpp" local="no">ESPMegaIoT.hpp</includes>
    <includes local="no">ETH.h</includes>
    <incdepgraph>
      <node id="14">
        <label>DigitalInputCard.hpp</label>
        <link refid="_digital_input_card_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Adafruit_ADS1X15.h</label>
      </node>
      <node id="23">
        <label>OneWire.h</label>
      </node>
      <node id="16">
        <label>DigitalInputIoT.hpp</label>
        <link refid="_digital_input_io_t_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="20">
        <label>DigitalOutputIoT.hpp</label>
        <link refid="_digital_output_io_t_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>PubSubClient.h</label>
      </node>
      <node id="13">
        <label>esp_log.h</label>
      </node>
      <node id="1">
        <label>/home/siwat/ESPMegaPRO3-library/ESPMegaIoT.cpp</label>
        <link refid="_e_s_p_mega_io_t_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ClimateIoT.hpp</label>
        <link refid="_climate_io_t_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>IoTComponent.hpp</label>
        <link refid="_io_t_component_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="22">
        <label>driver/rmt.h</label>
      </node>
      <node id="21">
        <label>ClimateCard.hpp</label>
        <link refid="_climate_card_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Arduino.h</label>
      </node>
      <node id="19">
        <label>Adafruit_PWMServoDriver.h</label>
      </node>
      <node id="27">
        <label>ETH.h</label>
      </node>
      <node id="7">
        <label>MCP4725.h</label>
      </node>
      <node id="25">
        <label>dhtnew.h</label>
      </node>
      <node id="2">
        <label>ESPMegaIoT.hpp</label>
        <link refid="_e_s_p_mega_io_t_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>AnalogIoT.hpp</label>
        <link refid="_analog_io_t_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>AnalogCard.hpp</label>
        <link refid="_analog_card_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>DigitalOutputCard.hpp</label>
        <link refid="_digital_output_card_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>DS18B20.h</label>
      </node>
      <node id="17">
        <label>FRAM.h</label>
      </node>
      <node id="15">
        <label>PCF8574.h</label>
      </node>
      <node id="28">
        <label>WiFi.h</label>
      </node>
      <node id="3">
        <label>ExpansionCard.hpp</label>
        <link refid="_expansion_card_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;ESPMegaIoT.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ETH.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_e_s_p_mega_io_t_1affa7c3b532147b2c485f5c3113f0a8a3" refkind="member"><highlight class="normal"><ref refid="class_e_s_p_mega_io_t_1affa7c3b532147b2c485f5c3113f0a8a3" kindref="member">ESPMegaIoT::ESPMegaIoT</ref>()<sp/>:<sp/>mqtt(tcpClient)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>tcpClient.setTimeout(TCP_TIMEOUT_SEC);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>components<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>255;<sp/>i++)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_e_s_p_mega_io_t_1a2e59b40473015d237898b93aef5631b9" refkind="member"><highlight class="normal"><ref refid="class_e_s_p_mega_io_t_1a2e59b40473015d237898b93aef5631b9" kindref="member">ESPMegaIoT::~ESPMegaIoT</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ESPMegaIoT::mqttCallback(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>*payload,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>null<sp/>terminated<sp/>string<sp/>from<sp/>the<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(payload_buffer,<sp/>payload,<sp/>length);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_buffer[length]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>base<sp/>topic<sp/>from<sp/>the<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic_without_base<sp/>=<sp/>topic<sp/>+<sp/>strlen(this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;callback<sp/>:<sp/>mqtt_relative_callbacks)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback.second(topic_without_base<sp/>+<sp/>3,<sp/>payload_buffer);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;callback<sp/>:<sp/>mqtt_callbacks)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback.second(topic,<sp/>payload_buffer);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>respective<sp/>card&apos;s<sp/>mqtt<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>after<sp/>the<sp/>base<sp/>topic,<sp/>there<sp/>should<sp/>be<sp/>the<sp/>card<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>/base_topic/card_id/...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>get<sp/>the<sp/>card<sp/>id<sp/>in<sp/>integer<sp/>form</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*card_id_str<sp/>=<sp/>strtok(topic_without_base,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>card_id<sp/>=<sp/>atoi(card_id_str);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>card<sp/>is<sp/>registered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(components[card_id]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>components[card_id]-&gt;handleMqttMessage(topic_without_base<sp/>+<sp/>3,<sp/>payload_buffer);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_e_s_p_mega_io_t_1a92e3a81d45a4389e5945c46486182e9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a92e3a81d45a4389e5945c46486182e9b" kindref="member">ESPMegaIoT::setBaseTopic</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base_topic)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>,<sp/>base_topic);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>base_topic_length<sp/>=<sp/>strlen(this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_e_s_p_mega_io_t_1a12baf9ad36896f400c5c77fa7a32d3de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a12baf9ad36896f400c5c77fa7a32d3de" kindref="member">ESPMegaIoT::intr_begin</ref>(<ref refid="class_expansion_card" kindref="compound">ExpansionCard</ref><sp/>*cards[])</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cards<sp/>=<sp/>cards;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_e_s_p_mega_io_t_1a260083ed6e8710b7321f18942ad6eef8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a260083ed6e8710b7321f18942ad6eef8" kindref="member">ESPMegaIoT::loop</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!active)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>each<sp/>component&apos;s<sp/>loop<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>255;<sp/>i++)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(components[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[i]-&gt;loop();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.loop();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>sessionKeepAlive();</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_e_s_p_mega_io_t_1ae7323d1d3ff23494b68a748c1eb57891" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1ae7323d1d3ff23494b68a748c1eb57891" kindref="member">ESPMegaIoT::registerCard</ref>(uint8_t<sp/>card_id)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>card<sp/>is<sp/>already<sp/>registered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(components[card_id]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>card<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>card_type<sp/>=<sp/>cards[card_id]-&gt;getType();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>respective<sp/>IoT<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(card_type)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CARD_TYPE_ANALOG:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t" kindref="compound">AnalogIoT</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;begin(card_id,<sp/>cards[card_id],<sp/>&amp;mqtt,<sp/>this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mqtt_connected)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;subscribe();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;publishReport();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CARD_TYPE_DIGITAL_INPUT:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_digital_input_io_t" kindref="compound">DigitalInputIoT</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;begin(card_id,<sp/>cards[card_id],<sp/>&amp;mqtt,<sp/>this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mqtt_connected)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;subscribe();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;publishReport();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CARD_TYPE_DIGITAL_OUTPUT:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_digital_output_io_t" kindref="compound">DigitalOutputIoT</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;begin(card_id,<sp/>cards[card_id],<sp/>&amp;mqtt,<sp/>this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mqtt_connected)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;subscribe();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;publishReport();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CARD_TYPE_CLIMATE:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_climate_io_t" kindref="compound">ClimateIoT</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;begin(card_id,<sp/>cards[card_id],<sp/>&amp;mqtt,<sp/>this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mqtt_connected)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;subscribe();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[card_id]-&gt;publishReport();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Registering<sp/>card<sp/>%d<sp/>failed:<sp/>Unknown<sp/>card&quot;</highlight><highlight class="normal">,<sp/>card_id);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_e_s_p_mega_io_t_1a11e8435455ffecc362eb4de09087d43a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a11e8435455ffecc362eb4de09087d43a" kindref="member">ESPMegaIoT::unregisterCard</ref>(uint8_t<sp/>card_id)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>card<sp/>is<sp/>registered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(components[card_id]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>IoT<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>components[card_id];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>components[card_id]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class_e_s_p_mega_io_t_1aba6676558bdfe8123028cbe3cf924eab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1aba6676558bdfe8123028cbe3cf924eab" kindref="member">ESPMegaIoT::publishCard</ref>(uint8_t<sp/>card_id)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>card<sp/>is<sp/>registered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(components[card_id]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>the<sp/>card</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>components[card_id]-&gt;publishReport();</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_e_s_p_mega_io_t_1a098f74442df4c0b5059f0d94921c64f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a098f74442df4c0b5059f0d94921c64f5" kindref="member">ESPMegaIoT::subscribe</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.subscribe(topic);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="class_e_s_p_mega_io_t_1a30629a0c025c0f20d84ab8ff7a9c437f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a30629a0c025c0f20d84ab8ff7a9c437f" kindref="member">ESPMegaIoT::unsubscribeFromTopic</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.unsubscribe(topic);</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class_e_s_p_mega_io_t_1ac90fb46005eeb8528bc6f7108d4a7c06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1ac90fb46005eeb8528bc6f7108d4a7c06" kindref="member">ESPMegaIoT::connectToWifi</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ssid,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*password)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.begin(ssid,<sp/>password);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="class_e_s_p_mega_io_t_1af7728b5bfaf7cb4849c127b739dda575" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1ac90fb46005eeb8528bc6f7108d4a7c06" kindref="member">ESPMegaIoT::connectToWifi</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ssid)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.begin(ssid);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="class_e_s_p_mega_io_t_1a4e382d99e13bafc5937e774cc14d6227" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a4e382d99e13bafc5937e774cc14d6227" kindref="member">ESPMegaIoT::disconnectFromWifi</ref>()</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.disconnect();</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="class_e_s_p_mega_io_t_1a8c18fddf81218ea5c69bca2eb064167f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a8c18fddf81218ea5c69bca2eb064167f" kindref="member">ESPMegaIoT::wifiConnected</ref>()</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WiFi.status()<sp/>==<sp/>WL_CONNECTED;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="class_e_s_p_mega_io_t_1a0dc0ebc659c880d5b17c85f341987535" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a6a1f92a8f3ca5ce73e93851f18892cb4" kindref="member">ESPMegaIoT::connectToMqtt</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*client_id,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mqtt_server,<sp/>uint16_t<sp/>mqtt_port,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mqtt_user,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mqtt_password)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.setServer(mqtt_server,<sp/>mqtt_port);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>boundCallback<sp/>=<sp/>std::bind(&amp;ESPMegaIoT::mqttCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::placeholders::_1,<sp/>std::placeholders::_2,<sp/>std::placeholders::_3);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.setCallback(boundCallback);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mqtt_user<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>mqtt_password<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>strlen(mqtt_user)<sp/>==<sp/>0<sp/>||<sp/>strlen(mqtt_password)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mqtt_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MQTT<sp/>Connection<sp/>failed:<sp/>Username<sp/>or<sp/>password<sp/>not<sp/>set<sp/>but<sp/>MQTT<sp/>use_auth<sp/>is<sp/>true&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mqtt.connect(client_id,<sp/>mqtt_user,<sp/>mqtt_password))</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionKeepAlive();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mqttSubscribe();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>all<sp/>cards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>255;<sp/>i++)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(components[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[i]-&gt;publishReport();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mqtt_connected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_e_s_p_mega_io_t_1a6033a2b376f85c2f912f77e9af0a1a2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a6a1f92a8f3ca5ce73e93851f18892cb4" kindref="member">ESPMegaIoT::connectToMqtt</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*client_id,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mqtt_server,<sp/>uint16_t<sp/>mqtt_port)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>MQTT<sp/>server<sp/>to<sp/>%s:%d&quot;</highlight><highlight class="normal">,<sp/>mqtt_server,<sp/>mqtt_port);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.setServer(mqtt_server,<sp/>mqtt_port);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>boundCallback<sp/>=<sp/>std::bind(&amp;ESPMegaIoT::mqttCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::placeholders::_1,<sp/>std::placeholders::_2,<sp/>std::placeholders::_3);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Binding<sp/>MQTT<sp/>callback&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.setCallback(boundCallback);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mqtt.connect(client_id))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MQTT<sp/>Connected,<sp/>Calling<sp/>session<sp/>keep<sp/>alive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessionKeepAlive();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Subscribing<sp/>to<sp/>topics&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mqttSubscribe();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Publishing<sp/>reports&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>all<sp/>cards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>255;<sp/>i++)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(components[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[i]-&gt;publishReport();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MQTT<sp/>Connected<sp/>OK.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mqtt_connected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MQTT<sp/>Connection<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>mqtt.state());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="class_e_s_p_mega_io_t_1a634dfa685dd2e7d5c0a442d4a85c3e1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a634dfa685dd2e7d5c0a442d4a85c3e1a" kindref="member">ESPMegaIoT::disconnectFromMqtt</ref>()</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.disconnect();</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="class_e_s_p_mega_io_t_1ae70528fc480706a1e7aeed202c40736e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1ae70528fc480706a1e7aeed202c40736e" kindref="member">ESPMegaIoT::publish</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.publish(topic,<sp/>payload);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="class_e_s_p_mega_io_t_1aedcb19a15a935777f1ccc51f24b7c07d" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_e_s_p_mega_io_t_1aedcb19a15a935777f1ccc51f24b7c07d" kindref="member">ESPMegaIoT::registerMqttCallback</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&gt;<sp/>callback)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt_callbacks[mqtt_callbacks_handler_index]<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mqtt_callbacks_handler_index++;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="class_e_s_p_mega_io_t_1a9a8ef4e5e7b98c0b77e339a5b4b847cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a9a8ef4e5e7b98c0b77e339a5b4b847cf" kindref="member">ESPMegaIoT::unregisterMqttCallback</ref>(uint8_t<sp/>handler)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt_callbacks.erase(handler);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ESPMegaIoT::mqttSubscribe()</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Begin<sp/>MQTT<sp/>Subscription&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;callback<sp/>:<sp/>subscribe_callbacks)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback.second();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mqtt.loop();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Subscribe<sp/>to<sp/>all<sp/>topics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>255;<sp/>i++)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(components[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Subscribing<sp/>component<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components[i]-&gt;subscribe();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mqtt.loop();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a740ea6dc48ae78b87d48afc39f00d992" kindref="member">ESPMegaIoT::publishRelative</ref>(uint8_t<sp/>card_id,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>absolute_topic[100];</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(absolute_topic,<sp/></highlight><highlight class="stringliteral">&quot;%s/%d/%s&quot;</highlight><highlight class="normal">,<sp/>this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>,<sp/>card_id,<sp/>topic);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.publish(absolute_topic,<sp/>payload);</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ESPMegaIoT::mqttReconnect()</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1afad6620dfaae6d7643cea3a08eedec80" kindref="member">mqtt_useauth</ref>)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1a6a1f92a8f3ca5ce73e93851f18892cb4" kindref="member">connectToMqtt</ref>(this-&gt;network_config.<ref refid="struct_network_config_1a450d89f26365aa8339be5b77682fbd91" kindref="member">hostname</ref>,<sp/>this-&gt;mqtt_config.mqtt_server,<sp/>this-&gt;mqtt_config.mqtt_port,<sp/>this-&gt;mqtt_config.mqtt_user,<sp/>this-&gt;mqtt_config.mqtt_password);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1a6a1f92a8f3ca5ce73e93851f18892cb4" kindref="member">connectToMqtt</ref>(this-&gt;network_config.<ref refid="struct_network_config_1a450d89f26365aa8339be5b77682fbd91" kindref="member">hostname</ref>,<sp/>this-&gt;mqtt_config.mqtt_server,<sp/>this-&gt;mqtt_config.mqtt_port);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ESPMegaIoT::sessionKeepAlive()</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>reconnect<sp/>the<sp/>MQTT<sp/>if<sp/>it<sp/>disconnect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>disconnect<sp/>happens,<sp/>this<sp/>will<sp/>reconnect<sp/>the<sp/>MQTT<sp/>within<sp/>1<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>connection<sp/>attempt<sp/>will<sp/>be<sp/>made<sp/>at<sp/>most<sp/>once<sp/>every<sp/>MQTT_RECONNECT_INTERVAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>have<sp/>the<sp/>effect<sp/>of<sp/>reconnecting<sp/>to<sp/>the<sp/>server<sp/>immediately<sp/>if<sp/>the<sp/>connection<sp/>is<sp/>lost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>connection<sp/>was<sp/>previously<sp/>stable<sp/>for<sp/>at<sp/>least<sp/>MQTT_RECONNECT_INTERVAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>will<sp/>not<sp/>reconnect<sp/>if<sp/>the<sp/>connection<sp/>was<sp/>unstable<sp/>and<sp/>the<sp/>connection<sp/>was<sp/>lost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lastSessionKeepAlive<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lastConnectionAttempt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(millis()<sp/>-<sp/>lastSessionKeepAlive<sp/>&gt;<sp/>1000)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSessionKeepAlive<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>mqtt<sp/>is<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mqtt.connected())</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>reconnect<sp/>if<sp/>lastConnectionAttempt<sp/>exceed<sp/>MQTT_RECONNECT_INTERVAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(millis()<sp/>-<sp/>lastConnectionAttempt<sp/>&gt;<sp/>MQTT_RECONNECT_INTERVAL)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastConnectionAttempt<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mqtt_connected<sp/>=<sp/>mqttReconnect();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="class_e_s_p_mega_io_t_1abb24084f6a8a448b4f6aea35bd4c7679" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_e_s_p_mega_io_t_1abb24084f6a8a448b4f6aea35bd4c7679" kindref="member">ESPMegaIoT::registerRelativeMqttCallback</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&gt;<sp/>callback)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt_relative_callbacks[mqtt_relative_callbacks_handler_index]<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mqtt_relative_callbacks_handler_index++;</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="class_e_s_p_mega_io_t_1a34be62570b94a256c2cda7f354cc9909" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a34be62570b94a256c2cda7f354cc9909" kindref="member">ESPMegaIoT::unregisterRelativeMqttCallback</ref>(uint8_t<sp/>handler)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt_relative_callbacks.erase(handler);</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="class_e_s_p_mega_io_t_1a740ea6dc48ae78b87d48afc39f00d992" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a740ea6dc48ae78b87d48afc39f00d992" kindref="member">ESPMegaIoT::publishRelative</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>absolute_topic[100];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(absolute_topic,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>,<sp/>topic);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.publish(absolute_topic,<sp/>payload);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.loop();</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="class_e_s_p_mega_io_t_1a98e8c822491c06be6823328e133507a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a98e8c822491c06be6823328e133507a1" kindref="member">ESPMegaIoT::subscribeRelative</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>absolute_topic[100];</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(absolute_topic,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>this-&gt;mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>,<sp/>topic);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.subscribe(absolute_topic);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt.loop();</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="class_e_s_p_mega_io_t_1adabafbe2c88bf37b3a90e0e1373ab752" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_e_s_p_mega_io_t_1adabafbe2c88bf37b3a90e0e1373ab752" kindref="member">ESPMegaIoT::registerSubscribeCallback</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)&gt;<sp/>callback)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>subscribe_callbacks[subscribe_callbacks_handler_index]<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subscribe_callbacks_handler_index++;</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="class_e_s_p_mega_io_t_1a0816eddc3a7bfd7685959a8cc6dec129" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a0816eddc3a7bfd7685959a8cc6dec129" kindref="member">ESPMegaIoT::unregisterSubscribeCallback</ref>(uint8_t<sp/>handler)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>subscribe_callbacks.erase(handler);</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="class_e_s_p_mega_io_t_1a426932179c2d84864e3b1fb269723fc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a426932179c2d84864e3b1fb269723fc6" kindref="member">ESPMegaIoT::setNetworkConfig</ref>(<ref refid="struct_network_config" kindref="compound">NetworkConfig</ref><sp/>network_config)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;network_config<sp/>=<sp/>network_config;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="class_e_s_p_mega_io_t_1a02bd57229c6f8b3f163c21bb6ae78414" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a02bd57229c6f8b3f163c21bb6ae78414" kindref="member">ESPMegaIoT::loadNetworkConfig</ref>()</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>network<sp/>config<sp/>from<sp/>FRAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>network_config.<ref refid="struct_network_config_1a0176904843001d1f2435ac52ca040ede" kindref="member">ip</ref><sp/>=<sp/>fram-&gt;read32(IOT_FRAM_ADDRESS);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>network_config.<ref refid="struct_network_config_1ab4e53b665582ae32752d5e5c22c7aa41" kindref="member">gateway</ref><sp/>=<sp/>fram-&gt;read32(IOT_FRAM_ADDRESS<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>network_config.<ref refid="struct_network_config_1a18dd746c622cb7a38da58ca94ff31657" kindref="member">subnet</ref><sp/>=<sp/>fram-&gt;read32(IOT_FRAM_ADDRESS<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>network_config.<ref refid="struct_network_config_1a2706b2e04d704496b2202e476fa9635c" kindref="member">dns1</ref><sp/>=<sp/>fram-&gt;read32(IOT_FRAM_ADDRESS<sp/>+<sp/>12);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>network_config.<ref refid="struct_network_config_1a393560e108d63338ae825bbab2c25e2c" kindref="member">dns2</ref><sp/>=<sp/>fram-&gt;read32(IOT_FRAM_ADDRESS<sp/>+<sp/>16);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;read(IOT_FRAM_ADDRESS<sp/>+<sp/>20,<sp/>(uint8_t<sp/>*)network_config.<ref refid="struct_network_config_1a450d89f26365aa8339be5b77682fbd91" kindref="member">hostname</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>network_config.<ref refid="struct_network_config_1a9884b31dba672d1f24636fb64a55d38a" kindref="member">useStaticIp</ref><sp/>=<sp/>fram-&gt;read8(IOT_FRAM_ADDRESS<sp/>+<sp/>52);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>network_config.<ref refid="struct_network_config_1a0233b29fea3a45f59e21b824e2850f5b" kindref="member">useWifi</ref><sp/>=<sp/>fram-&gt;read8(IOT_FRAM_ADDRESS<sp/>+<sp/>53);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>network_config.<ref refid="struct_network_config_1ae4c0e464e09b9f8aa2c9321d7defd7ea" kindref="member">wifiUseAuth</ref><sp/>=<sp/>fram-&gt;read8(IOT_FRAM_ADDRESS<sp/>+<sp/>54);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;read(IOT_FRAM_ADDRESS<sp/>+<sp/>55,<sp/>(uint8_t<sp/>*)network_config.<ref refid="struct_network_config_1a7d4ea00f216ac189ef206b2ee979df19" kindref="member">ssid</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;read(IOT_FRAM_ADDRESS<sp/>+<sp/>87,<sp/>(uint8_t<sp/>*)network_config.<ref refid="struct_network_config_1aa26399d81f1ca21f2094db5f0adc76d2" kindref="member">password</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="class_e_s_p_mega_io_t_1aec0e8b4a584d9cdccec777bd981726ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1aec0e8b4a584d9cdccec777bd981726ba" kindref="member">ESPMegaIoT::saveNetworkConfig</ref>()</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>network<sp/>config<sp/>to<sp/>FRAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write32(IOT_FRAM_ADDRESS,<sp/>network_config.<ref refid="struct_network_config_1a0176904843001d1f2435ac52ca040ede" kindref="member">ip</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write32(IOT_FRAM_ADDRESS<sp/>+<sp/>4,<sp/>network_config.<ref refid="struct_network_config_1ab4e53b665582ae32752d5e5c22c7aa41" kindref="member">gateway</ref>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write32(IOT_FRAM_ADDRESS<sp/>+<sp/>8,<sp/>network_config.<ref refid="struct_network_config_1a18dd746c622cb7a38da58ca94ff31657" kindref="member">subnet</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write32(IOT_FRAM_ADDRESS<sp/>+<sp/>12,<sp/>network_config.<ref refid="struct_network_config_1a2706b2e04d704496b2202e476fa9635c" kindref="member">dns1</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write32(IOT_FRAM_ADDRESS<sp/>+<sp/>16,<sp/>network_config.<ref refid="struct_network_config_1a393560e108d63338ae825bbab2c25e2c" kindref="member">dns2</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write(IOT_FRAM_ADDRESS<sp/>+<sp/>20,<sp/>(uint8_t<sp/>*)network_config.<ref refid="struct_network_config_1a450d89f26365aa8339be5b77682fbd91" kindref="member">hostname</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write8(IOT_FRAM_ADDRESS<sp/>+<sp/>52,<sp/>network_config.<ref refid="struct_network_config_1a9884b31dba672d1f24636fb64a55d38a" kindref="member">useStaticIp</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write8(IOT_FRAM_ADDRESS<sp/>+<sp/>53,<sp/>network_config.<ref refid="struct_network_config_1a0233b29fea3a45f59e21b824e2850f5b" kindref="member">useWifi</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write8(IOT_FRAM_ADDRESS<sp/>+<sp/>54,<sp/>network_config.<ref refid="struct_network_config_1ae4c0e464e09b9f8aa2c9321d7defd7ea" kindref="member">wifiUseAuth</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write(IOT_FRAM_ADDRESS<sp/>+<sp/>55,<sp/>(uint8_t<sp/>*)network_config.<ref refid="struct_network_config_1a7d4ea00f216ac189ef206b2ee979df19" kindref="member">ssid</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write(IOT_FRAM_ADDRESS<sp/>+<sp/>87,<sp/>(uint8_t<sp/>*)network_config.<ref refid="struct_network_config_1aa26399d81f1ca21f2094db5f0adc76d2" kindref="member">password</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="class_e_s_p_mega_io_t_1a2a167a8e30202a4fc34141595b795492" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a2a167a8e30202a4fc34141595b795492" kindref="member">ESPMegaIoT::ethernetBegin</ref>()</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>ethernetIface-&gt;setHostname(network_config.<ref refid="struct_network_config_1a450d89f26365aa8339be5b77682fbd91" kindref="member">hostname</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="class_e_s_p_mega_io_t_1a2c3f8fa952d6a1e008b4b15990f9a2e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a2c3f8fa952d6a1e008b4b15990f9a2e7" kindref="member">ESPMegaIoT::loadMqttConfig</ref>()</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>mqtt<sp/>config<sp/>from<sp/>FRAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>skip<sp/>bytes<sp/>119-127<sp/>because<sp/>they<sp/>are<sp/>reserved<sp/>for<sp/>the<sp/>network<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt_config.<ref refid="struct_mqtt_config_1a8c562630896777b8521621f553935a49" kindref="member">mqtt_port</ref><sp/>=<sp/>fram-&gt;read16(IOT_FRAM_ADDRESS<sp/>+<sp/>128);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;read(IOT_FRAM_ADDRESS<sp/>+<sp/>130,<sp/>(uint8_t<sp/>*)mqtt_config.<ref refid="struct_mqtt_config_1adaf50456b5f0c76b1db2ce80647ca92e" kindref="member">mqtt_server</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;read(IOT_FRAM_ADDRESS<sp/>+<sp/>162,<sp/>(uint8_t<sp/>*)mqtt_config.<ref refid="struct_mqtt_config_1a87c8492269c0144f0f8ee100184ca5cd" kindref="member">mqtt_user</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;read(IOT_FRAM_ADDRESS<sp/>+<sp/>194,<sp/>(uint8_t<sp/>*)mqtt_config.<ref refid="struct_mqtt_config_1ad9a7f3d30941e6bde92684bfb5974230" kindref="member">mqtt_password</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>mqtt_config.<ref refid="struct_mqtt_config_1afad6620dfaae6d7643cea3a08eedec80" kindref="member">mqtt_useauth</ref><sp/>=<sp/>fram-&gt;read8(IOT_FRAM_ADDRESS<sp/>+<sp/>226);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;read(IOT_FRAM_ADDRESS<sp/>+<sp/>227,<sp/>(uint8_t<sp/>*)mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;base_topic_length<sp/>=<sp/>strlen(mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="class_e_s_p_mega_io_t_1ae03cab69f4e68d829611ed5399ba1c3b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1ae03cab69f4e68d829611ed5399ba1c3b" kindref="member">ESPMegaIoT::saveMqttConfig</ref>()</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write16(IOT_FRAM_ADDRESS<sp/>+<sp/>128,<sp/>mqtt_config.<ref refid="struct_mqtt_config_1a8c562630896777b8521621f553935a49" kindref="member">mqtt_port</ref>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write(IOT_FRAM_ADDRESS<sp/>+<sp/>130,<sp/>(uint8_t<sp/>*)mqtt_config.<ref refid="struct_mqtt_config_1adaf50456b5f0c76b1db2ce80647ca92e" kindref="member">mqtt_server</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write(IOT_FRAM_ADDRESS<sp/>+<sp/>162,<sp/>(uint8_t<sp/>*)mqtt_config.<ref refid="struct_mqtt_config_1a87c8492269c0144f0f8ee100184ca5cd" kindref="member">mqtt_user</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write(IOT_FRAM_ADDRESS<sp/>+<sp/>194,<sp/>(uint8_t<sp/>*)mqtt_config.<ref refid="struct_mqtt_config_1ad9a7f3d30941e6bde92684bfb5974230" kindref="member">mqtt_password</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write8(IOT_FRAM_ADDRESS<sp/>+<sp/>226,<sp/>mqtt_config.<ref refid="struct_mqtt_config_1afad6620dfaae6d7643cea3a08eedec80" kindref="member">mqtt_useauth</ref>);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>fram-&gt;write(IOT_FRAM_ADDRESS<sp/>+<sp/>227,<sp/>(uint8_t<sp/>*)mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>,<sp/>32);</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="class_e_s_p_mega_io_t_1a6a1f92a8f3ca5ce73e93851f18892cb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a6a1f92a8f3ca5ce73e93851f18892cb4" kindref="member">ESPMegaIoT::connectToMqtt</ref>()</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mqtt_config.<ref refid="struct_mqtt_config_1afad6620dfaae6d7643cea3a08eedec80" kindref="member">mqtt_useauth</ref>)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Connecting<sp/>to<sp/>MQTT<sp/>with<sp/>auth&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1a6a1f92a8f3ca5ce73e93851f18892cb4" kindref="member">connectToMqtt</ref>(network_config.<ref refid="struct_network_config_1a450d89f26365aa8339be5b77682fbd91" kindref="member">hostname</ref>,<sp/>mqtt_config.<ref refid="struct_mqtt_config_1adaf50456b5f0c76b1db2ce80647ca92e" kindref="member">mqtt_server</ref>,<sp/>mqtt_config.<ref refid="struct_mqtt_config_1a8c562630896777b8521621f553935a49" kindref="member">mqtt_port</ref>,<sp/>mqtt_config.<ref refid="struct_mqtt_config_1a87c8492269c0144f0f8ee100184ca5cd" kindref="member">mqtt_user</ref>,<sp/>mqtt_config.<ref refid="struct_mqtt_config_1ad9a7f3d30941e6bde92684bfb5974230" kindref="member">mqtt_password</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(</highlight><highlight class="stringliteral">&quot;ESPMegaIoT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Connecting<sp/>to<sp/>MQTT<sp/>without<sp/>auth&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1a6a1f92a8f3ca5ce73e93851f18892cb4" kindref="member">connectToMqtt</ref>(network_config.<ref refid="struct_network_config_1a450d89f26365aa8339be5b77682fbd91" kindref="member">hostname</ref>,<sp/>mqtt_config.<ref refid="struct_mqtt_config_1adaf50456b5f0c76b1db2ce80647ca92e" kindref="member">mqtt_server</ref>,<sp/>mqtt_config.<ref refid="struct_mqtt_config_1a8c562630896777b8521621f553935a49" kindref="member">mqtt_port</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="class_e_s_p_mega_io_t_1aea329bb2d424ea758be8f8502655dfc3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1aea329bb2d424ea758be8f8502655dfc3" kindref="member">ESPMegaIoT::connectNetwork</ref>()</highlight></codeline>
<codeline lineno="640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(network_config.<ref refid="struct_network_config_1a0233b29fea3a45f59e21b824e2850f5b" kindref="member">useWifi</ref>)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(network_config.<ref refid="struct_network_config_1ae4c0e464e09b9f8aa2c9321d7defd7ea" kindref="member">wifiUseAuth</ref>)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1ac90fb46005eeb8528bc6f7108d4a7c06" kindref="member">connectToWifi</ref>(network_config.<ref refid="struct_network_config_1a7d4ea00f216ac189ef206b2ee979df19" kindref="member">ssid</ref>,<sp/>network_config.<ref refid="struct_network_config_1aa26399d81f1ca21f2094db5f0adc76d2" kindref="member">password</ref>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1ac90fb46005eeb8528bc6f7108d4a7c06" kindref="member">connectToWifi</ref>(network_config.<ref refid="struct_network_config_1a7d4ea00f216ac189ef206b2ee979df19" kindref="member">ssid</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(network_config.<ref refid="struct_network_config_1a9884b31dba672d1f24636fb64a55d38a" kindref="member">useStaticIp</ref>)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WiFi.config(network_config.<ref refid="struct_network_config_1a0176904843001d1f2435ac52ca040ede" kindref="member">ip</ref>,<sp/>network_config.<ref refid="struct_network_config_1ab4e53b665582ae32752d5e5c22c7aa41" kindref="member">gateway</ref>,<sp/>network_config.<ref refid="struct_network_config_1a18dd746c622cb7a38da58ca94ff31657" kindref="member">subnet</ref>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WiFi.config(INADDR_NONE,<sp/>INADDR_NONE,<sp/>INADDR_NONE);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1a2a167a8e30202a4fc34141595b795492" kindref="member">ethernetBegin</ref>();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(network_config.<ref refid="struct_network_config_1a9884b31dba672d1f24636fb64a55d38a" kindref="member">useStaticIp</ref>)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ethernetIface-&gt;config(network_config.<ref refid="struct_network_config_1a0176904843001d1f2435ac52ca040ede" kindref="member">ip</ref>,<sp/>network_config.<ref refid="struct_network_config_1ab4e53b665582ae32752d5e5c22c7aa41" kindref="member">gateway</ref>,<sp/>network_config.<ref refid="struct_network_config_1a18dd746c622cb7a38da58ca94ff31657" kindref="member">subnet</ref>,<sp/>network_config.<ref refid="struct_network_config_1a2706b2e04d704496b2202e476fa9635c" kindref="member">dns1</ref>,<sp/>network_config.<ref refid="struct_network_config_1a393560e108d63338ae825bbab2c25e2c" kindref="member">dns2</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="class_e_s_p_mega_io_t_1a16b33cc73cccefd62577dca8f015ee43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a16b33cc73cccefd62577dca8f015ee43" kindref="member">ESPMegaIoT::setMqttConfig</ref>(<ref refid="struct_mqtt_config" kindref="compound">MqttConfig</ref><sp/>mqtt_config)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mqtt_config<sp/>=<sp/>mqtt_config;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;base_topic_length<sp/>=<sp/>strlen(mqtt_config.<ref refid="struct_mqtt_config_1a9b0519751efd0c53e8ee16b6697b99fa" kindref="member">base_topic</ref>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="class_e_s_p_mega_io_t_1a2da8aec25ea170e5974f786798191fcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1a2da8aec25ea170e5974f786798191fcb" kindref="member">ESPMegaIoT::bindEthernetInterface</ref>(ETHClass<sp/>*ethernetIface)</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ethernetIface<sp/>=<sp/>ethernetIface;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="687" refid="class_e_s_p_mega_io_t_1a667661f7ed0bcd013561c3f5d637a4fd" refkind="member"><highlight class="normal"><ref refid="class_io_t_component" kindref="compound">IoTComponent</ref><sp/>*<ref refid="class_e_s_p_mega_io_t_1a667661f7ed0bcd013561c3f5d637a4fd" kindref="member">ESPMegaIoT::getComponent</ref>(uint8_t<sp/>card_id)</highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>components[card_id];</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="class_e_s_p_mega_io_t_1ab0ee8902014f9d08c97f0ffe11f66133" refkind="member"><highlight class="normal"><ref refid="struct_network_config" kindref="compound">NetworkConfig</ref><sp/>*<ref refid="class_e_s_p_mega_io_t_1ab0ee8902014f9d08c97f0ffe11f66133" kindref="member">ESPMegaIoT::getNetworkConfig</ref>()</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;network_config;</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="711" refid="class_e_s_p_mega_io_t_1a831d8c372ae931eeaabbe999dad27e5c" refkind="member"><highlight class="normal"><ref refid="struct_mqtt_config" kindref="compound">MqttConfig</ref><sp/>*<ref refid="class_e_s_p_mega_io_t_1a831d8c372ae931eeaabbe999dad27e5c" kindref="member">ESPMegaIoT::getMqttConfig</ref>()</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;mqtt_config;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="721" refid="class_e_s_p_mega_io_t_1af9365947904e2fe67965db7c12164eac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1af9365947904e2fe67965db7c12164eac" kindref="member">ESPMegaIoT::mqttConnected</ref>()</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>mqtt_connected;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mqtt.connected();</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="732" refid="class_e_s_p_mega_io_t_1acb0b6d3616f924ae793981f8653b142f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1acb0b6d3616f924ae793981f8653b142f" kindref="member">ESPMegaIoT::networkConnected</ref>()</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(network_config.<ref refid="struct_network_config_1a0233b29fea3a45f59e21b824e2850f5b" kindref="member">useWifi</ref>)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WiFi.status()<sp/>==<sp/>WL_CONNECTED;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ethernetIface-&gt;linkUp();</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="746" refid="class_e_s_p_mega_io_t_1afd192a63876d86300086522e701905de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_e_s_p_mega_io_t_1afd192a63876d86300086522e701905de" kindref="member">ESPMegaIoT::bindFRAM</ref>(FRAM<sp/>*fram)</highlight></codeline>
<codeline lineno="747"><highlight class="normal">{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;fram<sp/>=<sp/>fram;</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="756" refid="class_e_s_p_mega_io_t_1ae0f8dc4901511ccd52cb81409bc50574" refkind="member"><highlight class="normal">IPAddress<sp/><ref refid="class_e_s_p_mega_io_t_1ae0f8dc4901511ccd52cb81409bc50574" kindref="member">ESPMegaIoT::getWifiIp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WiFi.localIP();</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="class_e_s_p_mega_io_t_1ae6aad5ece3729e612352e2256e44bbec" refkind="member"><highlight class="normal">IPAddress<sp/><ref refid="class_e_s_p_mega_io_t_1ae6aad5ece3729e612352e2256e44bbec" kindref="member">ESPMegaIoT::getETHIp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ETH.localIP();</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="class_e_s_p_mega_io_t_1a6fa8479ba86d6cafb32a82cbde94cdb0" refkind="member"><highlight class="normal">IPAddress<sp/><ref refid="class_e_s_p_mega_io_t_1a6fa8479ba86d6cafb32a82cbde94cdb0" kindref="member">ESPMegaIoT::getIp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(network_config.<ref refid="struct_network_config_1a0233b29fea3a45f59e21b824e2850f5b" kindref="member">useWifi</ref>)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1ae0f8dc4901511ccd52cb81409bc50574" kindref="member">getWifiIp</ref>();</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1ae6aad5ece3729e612352e2256e44bbec" kindref="member">getETHIp</ref>();</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="786" refid="class_e_s_p_mega_io_t_1a3ed44db4c8d69dc8f9f611acfeb609cf" refkind="member"><highlight class="normal">String<sp/><ref refid="class_e_s_p_mega_io_t_1a3ed44db4c8d69dc8f9f611acfeb609cf" kindref="member">ESPMegaIoT::getETHMac</ref>()<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ETH.macAddress();</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="795" refid="class_e_s_p_mega_io_t_1ae6bb7062882ac48df2f4ea98618e5e30" refkind="member"><highlight class="normal">String<sp/><ref refid="class_e_s_p_mega_io_t_1ae6bb7062882ac48df2f4ea98618e5e30" kindref="member">ESPMegaIoT::getWifiMac</ref>()<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WiFi.macAddress();</highlight></codeline>
<codeline lineno="797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="804" refid="class_e_s_p_mega_io_t_1ac2c1a59d86f1c8ca3c76ec4870614163" refkind="member"><highlight class="normal">String<sp/><ref refid="class_e_s_p_mega_io_t_1ac2c1a59d86f1c8ca3c76ec4870614163" kindref="member">ESPMegaIoT::getMac</ref>()<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(network_config.<ref refid="struct_network_config_1a0233b29fea3a45f59e21b824e2850f5b" kindref="member">useWifi</ref>)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1ae6bb7062882ac48df2f4ea98618e5e30" kindref="member">getWifiMac</ref>();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_e_s_p_mega_io_t_1a3ed44db4c8d69dc8f9f611acfeb609cf" kindref="member">getETHMac</ref>();</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/siwat/ESPMegaPRO3-library/ESPMegaIoT.cpp"/>
  </compounddef>
</doxygen>
