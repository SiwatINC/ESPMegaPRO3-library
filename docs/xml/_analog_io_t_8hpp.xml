<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_analog_io_t_8hpp" kind="file" language="C++">
    <compoundname>AnalogIoT.hpp</compoundname>
    <includes refid="_io_t_component_8hpp" local="no">IoTComponent.hpp</includes>
    <includes refid="_analog_card_8hpp" local="no">AnalogCard.hpp</includes>
    <includes local="no">map</includes>
    <includedby refid="_analog_io_t_8cpp" local="no">/home/siwat/ESPMegaPRO3-library/AnalogIoT.cpp</includedby>
    <includedby refid="_e_s_p_mega_io_t_8hpp" local="no">/home/siwat/ESPMegaPRO3-library/ESPMegaIoT.hpp</includedby>
    <incdepgraph>
      <node id="8">
        <label>Adafruit_ADS1X15.h</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="5">
        <label>PubSubClient.h</label>
      </node>
      <node id="6">
        <label>esp_log.h</label>
      </node>
      <node id="2">
        <label>IoTComponent.hpp</label>
        <link refid="_io_t_component_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="4">
        <label>Arduino.h</label>
      </node>
      <node id="9">
        <label>MCP4725.h</label>
      </node>
      <node id="1">
        <label>/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp</label>
        <link refid="_analog_io_t_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>AnalogCard.hpp</label>
        <link refid="_analog_card_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ExpansionCard.hpp</label>
        <link refid="_expansion_card_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/home/siwat/ESPMegaPRO3-library/ESPMegaProOS.hpp</label>
        <link refid="_e_s_p_mega_pro_o_s_8hpp_source"/>
      </node>
      <node id="2">
        <label>/home/siwat/ESPMegaPRO3-library/AnalogIoT.cpp</label>
        <link refid="_analog_io_t_8cpp"/>
      </node>
      <node id="6">
        <label>/home/siwat/ESPMegaPRO3-library/ESPMegaWebServer.cpp</label>
        <link refid="_e_s_p_mega_web_server_8cpp"/>
      </node>
      <node id="3">
        <label>/home/siwat/ESPMegaPRO3-library/ESPMegaIoT.hpp</label>
        <link refid="_e_s_p_mega_io_t_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp</label>
        <link refid="_analog_io_t_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/siwat/ESPMegaPRO3-library/InternalDisplay.hpp</label>
        <link refid="_internal_display_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/siwat/ESPMegaPRO3-library/ESPMegaWebServer.hpp</label>
        <link refid="_e_s_p_mega_web_server_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_analog_io_t" prot="public">AnalogIoT</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_analog_io_t_8hpp_1a3461ad5af85b3372e0ad9da619bdd0cf" prot="public" static="no">
        <name>DAC_SET_STATE_TOPIC</name>
        <initializer>&quot;/set/state&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" line="7" column="9" bodyfile="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_analog_io_t_8hpp_1aa2da65fa6be48380b65b1d3a92620a45" prot="public" static="no">
        <name>DAC_SET_VALUE_TOPIC</name>
        <initializer>&quot;/set/value&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" line="8" column="9" bodyfile="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_analog_io_t_8hpp_1adc3c60a1b9fb07169c831bcf2f3e9f24" prot="public" static="no">
        <name>DAC_STATE_TOPIC</name>
        <initializer>&quot;/dac/00/state&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" line="9" column="9" bodyfile="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_analog_io_t_8hpp_1a9386760559585200d2e7f219c4954bf1" prot="public" static="no">
        <name>DAC_VALUE_TOPIC</name>
        <initializer>&quot;/dac/00/value&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" line="10" column="9" bodyfile="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_analog_io_t_8hpp_1a5e231b16f3d2fd41cd86aa054dc6fb96" prot="public" static="no">
        <name>DAC_PUBLISH_ENABLE_TOPIC</name>
        <initializer>&quot;/publish_enable&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" line="11" column="9" bodyfile="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_analog_io_t_8hpp_1a40d2cb170c349f2752381005b1712e3c" prot="public" static="no">
        <name>REQUEST_STATE_TOPIC</name>
        <initializer>&quot;requeststate&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" line="12" column="9" bodyfile="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;IoTComponent.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AnalogCard.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MQTT<sp/>Topics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_SET_STATE_TOPIC<sp/>&quot;/set/state&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_SET_VALUE_TOPIC<sp/>&quot;/set/value&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_STATE_TOPIC<sp/>&quot;/dac/00/state&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_VALUE_TOPIC<sp/>&quot;/dac/00/value&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DAC_PUBLISH_ENABLE_TOPIC<sp/>&quot;/publish_enable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REQUEST_STATE_TOPIC<sp/>&quot;requeststate&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_analog_io_t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_analog_io_t" kindref="compound">AnalogIoT</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_io_t_component" kindref="compound">IoTComponent</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_analog_io_t_1ac3923fe40bba207e1959a72c180e85d6" kindref="member">AnalogIoT</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_analog_io_t_1abb92f699eebef5d8b6db83d0053a7e9a" kindref="member">~AnalogIoT</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a3888c317175981272a603fe27054460a" kindref="member">begin</ref>(uint8_t<sp/>card_id,<sp/><ref refid="class_expansion_card" kindref="compound">ExpansionCard</ref><sp/>*card,<sp/>PubSubClient<sp/>*mqtt,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base_topic);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a24c2bf88a47a4cdaf8ebf5e55508ddbf" kindref="member">handleMqttMessage</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a84402cb7e45ce0da63a860ee16716ce8" kindref="member">handleDACChange</ref>(uint8_t<sp/>pin,<sp/>uint16_t<sp/>value);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a09922e70d6374ba79b3193c3a3b35231" kindref="member">publishADCs</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a2f74e7f22b3374b4950357d9f4b11ccc" kindref="member">publishADC</ref>(uint8_t<sp/>pin);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a0050d5b14ed148e2ea358f393909114c" kindref="member">publishDACs</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a108ab3e98144f9ff07ec88ba794d594c" kindref="member">publishDAC</ref>(uint8_t<sp/>pin);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1af9686e6a38360e26a2c476c96f9d7c91" kindref="member">publishDACState</ref>(uint8_t<sp/>pin);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a87bed89be4587e778eac2f8cabed4bab" kindref="member">publishDACValue</ref>(uint8_t<sp/>pin);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a9a4ba77a993ea1c789f809ea89c57722" kindref="member">setADCsPublishInterval</ref>(uint32_t<sp/>interval);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1ada3f1d46782f2b63488445e75b05cf63" kindref="member">setADCsPublishEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_analog_io_t_1a1e1c02ae471274537452a89fd067d024" kindref="member">registerADCConversionCallback</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(uint8_t,<sp/>uint16_t)&gt;<sp/>callback);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1aa7d3175c73cea942123caf24ce779539" kindref="member">unregisterADCConversionCallback</ref>(uint8_t<sp/>handler);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1abd35a9011a0018c38af690bd95e367fb" kindref="member">setADCConversionInterval</ref>(uint8_t<sp/>pin,<sp/>uint16_t<sp/>interval);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1ae3b8eaee385ed8eb20f145996513461d" kindref="member">setADCConversionEnabled</ref>(uint8_t<sp/>pin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a27f21df078fd88872c9f54f58f2c37bd" kindref="member">processADCSetConversionIntervalMessage</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload,<sp/>uint8_t<sp/>topic_length);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a9506f0c01d7ef71858a4881fc01050b7" kindref="member">processADCSetConversionEnabledMessage</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload,<sp/>uint8_t<sp/>topic_length);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1ab582bcdd8b97fe81dae216ace1e7e827" kindref="member">processDACSetStateMessage</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload,<sp/>uint8_t<sp/>topic_length);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1adf3114a294de15674d994785a82548f8" kindref="member">processDACSetValueMessage</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload,<sp/>uint8_t<sp/>topic_length);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a2e18ed063bdbf7cc2a59b20a721050f8" kindref="member">processRequestStateMessage</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload,<sp/>uint8_t<sp/>topic_length);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1ad49a200a7568281874f39b2f14f12621" kindref="member">publishReport</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_analog_io_t_1a37216e8cc0030b538ead2a7c30546d15" kindref="member">subscribe</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loop();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_analog_io_t_1ae16f9a69bc1cefda4b6cc766f5cbc9cd" kindref="member">getType</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>index<sp/>of<sp/>the<sp/>next<sp/>callback<sp/>to<sp/>be<sp/>registered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>adc_conversion_callback_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>length<sp/>of<sp/>the<sp/>topics<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>calculate<sp/>it<sp/>every<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>dac_set_state_length;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>dac_set_value_length;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>dac_state_length;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>dac_value_length;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>request_state_length;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>dac_publish_enable_length;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>last_adc_publish<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_analog_card" kindref="compound">AnalogCard</ref><sp/>*card;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adc_publish_enabled[8];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>adc_conversion_interval[8];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>last_adc_conversion[8];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;uint8_t,<sp/>std::function&lt;void(uint8_t,<sp/>uint16_t)&gt;&gt;<sp/>adc_conversion_callbacks;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/siwat/ESPMegaPRO3-library/AnalogIoT.hpp"/>
  </compounddef>
</doxygen>
