<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated" xml:lang="en-US">
<title>Class List</title>
Here are the classes, structs, unions and interfaces with brief descriptions:<link linkend="_struct_air_conditioner">AirConditioner</link>
<para>This struct is used to store information about an air conditioner </para>
<link linkend="_class_analog_card">AnalogCard</link>
<para>This class represents the Analog Card </para>
<link linkend="_class_analog_io_t">AnalogIoT</link>
<para>Class for connecting the Analog Card to the IoT module </para>
<link linkend="_class_climate_card">ClimateCard</link>
<para>Class for controlling an air conditioner </para>
<link linkend="_struct_climate_card_data">ClimateCardData</link>
<para>The struct is used to store the state of the air conditioner </para>
<link linkend="_class_climate_io_t">ClimateIoT</link>
<para>Class for connecting the Climate Card to the IoT module </para>
<link linkend="_class_digital_input_card">DigitalInputCard</link>
<para><link linkend="_class_e_s_p_mega_p_r_o">ESPMegaPRO</link> Digital Input Card </para>
<link linkend="_class_digital_input_io_t">DigitalInputIoT</link>
<para>Class for connecting the Digital Input Card to the IoT module </para>
<link linkend="_class_digital_output_card">DigitalOutputCard</link>
<para>Class for controlling the Digital Output Card </para>
<link linkend="_class_digital_output_io_t">DigitalOutputIoT</link>
<para>Class interfacing with the Digital Output Card through MQTT </para>
<link linkend="_class_e_s_p_mega_display">ESPMegaDisplay</link>
<para>Class for controlling the <link linkend="_class_e_s_p_mega_display">ESPMegaDisplay</link> </para>
<link linkend="_class_e_s_p_mega_io_t">ESPMegaIoT</link>
<para>Class that is used to interface with the <link linkend="_class_e_s_p_mega_p_r_o">ESPMegaPRO</link> IoT module </para>
<link linkend="_class_e_s_p_mega_p_r_o">ESPMegaPRO</link>
<para>Main class for the <link linkend="_class_e_s_p_mega_p_r_o">ESPMegaPRO</link> library </para>
<link linkend="_class_e_s_p_mega_t_c_p">ESPMegaTCP</link><link linkend="_class_e_s_p_mega_web_server">ESPMegaWebServer</link>
<para>Provides a web server for <link linkend="_class_e_s_p_mega_p_r_o">ESPMegaPRO</link> </para>
<link linkend="_class_expansion_card">ExpansionCard</link>
<para>The base class for all expansion cards </para>
<link linkend="_class_internal_display">InternalDisplay</link>
<para>The internal display of the <link linkend="_class_e_s_p_mega_p_r_o">ESPMegaPRO</link> </para>
<link linkend="_class_io_t_component">IoTComponent</link>
<para>Base class that is used to interface with an expansion card through MQTT </para>
<link linkend="_struct_mqtt_config">MqttConfig</link>
<para>The MQTT configuration struct </para>
<link linkend="_struct_network_config">NetworkConfig</link>
<para>The network configuration struct </para>
<link linkend="_structrtctime__t">rtctime_t</link>
<para>The <link linkend="_structrtctime__t">rtctime_t</link> struct is a structure for storing the time </para>
</section>
